package com.test;

import java.util.concurrent.BlockingQueue;
import java.util.concurrent.CountDownLatch;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

class Producer implements Runnable {

	private BlockingQueue<JSONObject> queue;
	private static final int TOTAL_MSG = 200;

	Producer(BlockingQueue<JSONObject> queue) {
		this.queue = queue;
	}

	@SuppressWarnings("unchecked")
	@Override
	public void run() {

		for (int i = 0; i < TOTAL_MSG; i++) {
			try {
				JSONObject obj = new JSONObject();
				obj.put("message", "Producer producing message number "+i+1);
				obj.put("id", i);
				System.out.print(obj);
				System.out.println("Producing element...");
				queue.put(obj);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}

	}
}

class Consumer implements Runnable {

	private BlockingQueue<JSONObject> queue;
	private CountDownLatch countDownLatch;

	Consumer(BlockingQueue<JSONObject> queue, CountDownLatch count) {
		this.queue = queue;
		this.countDownLatch = count;
	}

	@SuppressWarnings("unchecked")
	@Override
	public void run() {

		while(true){
			if (countDownLatch.getCount() == 0) 
				break;
			
			try {
				JSONObject obj = queue.take();
		//		System.out.println("Serving Token :" + token);
			} catch (InterruptedException e) {
				e.printStackTrace();
			} finally {
				countDownLatch.countDown();
			}
		}
	}
}

public class PhonePeMultithreading {

	public static void main(String arg[]) {

		JSONParser parser = new JSONParser();
	      //String s = "{\"balance\": 1000.21, \"num\":100}";
	      JSONObject obj1 = new JSONObject();
			obj1.put("message", "Producer producing message number ");
			obj1.put("id", 122);
			String s = obj1.toString();
			System.out.println(s);
	      try{
	         Object obj = parser.parse(s);
	         JSONArray array = (JSONArray)obj;
				
	         System.out.println("The 2nd element of array");
	         System.out.println(array.get(1));
	         System.out.println();

	         JSONObject obj2 = (JSONObject)array.get(1);
	         System.out.println("Field \"1\"");
	         System.out.println(obj2.get("1"));    

	         s = "{}";
	         obj = parser.parse(s);
	         System.out.println(obj);

	         s = "[5,]";
	         obj = parser.parse(s);
	         System.out.println(obj);

	         s = "[5,,2]";
	         obj = parser.parse(s);
	         System.out.println(obj);
	      }catch(ParseException pe){
			
	         System.out.println("position: " + pe.getPosition());
	         System.out.println(pe);
	      }
	}

}
