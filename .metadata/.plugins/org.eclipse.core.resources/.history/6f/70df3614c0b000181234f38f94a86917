package com.hackerrank;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Stream;

/*
 * You are given an array and you need to find number of tripets of indices (i,j,k) such that the elements at those indices are in geometric progression for a given 
 * common ratio r and i<j<k.

For example, arr[1,4,16,64] . If r=4, we have [1,4,16] and [4,16,64]
 */
public class HashMap04 {

	static long countTriplets(List<Long> arr, long r) {
		return r;


    }
	
	public static void main(String[] args) throws IOException {
        
		List<Long> arr = new ArrayList<Long>();
		arr.add(1L);
		arr.add(4L);
		arr.add(16L);
		arr.add(64L);
		int r=4;
        long ans = countTriplets(arr, r);

       
    }
}
